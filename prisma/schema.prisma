// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id
  email          String         @unique
  name           String?
  email_verified Boolean        @default(false)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  address        UserAddress[]
  orderDetails   OrderDetails[]
  cart           Cart?
}

model UserAddress {
  id            String   @id @default(uuid())
  userId        String   
  user          User     @relation(fields: [userId], references: [id])
  address_line1 String
  address_line2 String
  city          String
  state         String
  country       String
  pincode       String
  mobile        String
  telephone     String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model ProductCategory {
  id          String    @id @default(uuid())
  name        String    @unique
  description String
  product     Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model ProductInventory {
  id        String   @id @default(uuid())
  quantity  Int
  productId String   @unique
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductDiscount {
  id          String    @id @default(uuid())
  name        String
  discount    Float
  description String
  active      Boolean
  product     Product[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model ProductImage{
  id        String   @id @default(uuid())
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  image     String
  main      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          String            @id @default(uuid())
  name        String
  description String
  price       Float
  category    ProductCategory   @relation(fields: [categoryId], references: [id])
  categoryId  String
  discount    ProductDiscount   @relation(fields: [discountId], references: [id])
  discountId  String
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt            
  cartItem    CartItem[]
  orderItems  OrderItems[]
  inventory   ProductInventory?
  image       ProductImage[]
}

model PaymentDetails {
  id             String        @id @default(uuid())
  order_id       String
  amount         Float
  payment_mode   String
  payment_status String    
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  orderDetails   OrderDetails?
}

model OrderDetails {
  id             String         @id @default(uuid())
  User           User           @relation(fields: [userId], references: [id])
  userId         String
  total          Float
  paymentId      String         @unique
  paymentDetails PaymentDetails @relation(fields: [paymentId], references: [id])
  status         String
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt   
  orderItems     OrderItems[]
}



model OrderItems {
  id           String       @id @default(uuid())
  orderId      String
  orderDetails OrderDetails @relation(fields: [orderId], references: [id])
  productId    String
  product      Product      @relation(fields: [productId], references: [id])
  quantity     Int
  price        Float
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Cart {
  id        String     @id @default(uuid())
  userId    String     @unique
  user      User       @relation(fields: [userId], references: [id])
  total     Float
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  cartItem  CartItem[]
}

model CartItem {
  id        String   @id @default(uuid())
  cartId    String
  cart      Cart     @relation(fields: [cartId], references: [id])
  productId String   @unique
  product   Product  @relation(fields: [productId], references: [id])
  price     Float
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
